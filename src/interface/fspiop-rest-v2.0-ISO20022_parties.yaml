openapi: 3.0.2
info:
  version: v2.0-iso20022-parties-draft
  title: Open API for FSP Interoperability (FSPIOP) - the ISO 20022 message version (parties)
  description: IN PROGRESS
  license:
    name: CC BY-ND 4.0
    url: https://github.com/mojaloop/mojaloop-specification/blob/main/LICENSE.md
  contact:
    name: Sam Kummary
    url: https://github.com/mojaloop/mojaloop-specification/issues
servers:
  - url: protocol://hostname:<port>/switch/
    variables:
      protocol:
        enum:
          - http
          - https
        default: https
paths:
  /parties/{Type}/{ID}:
    parameters:
      - $ref: "#/components/parameters/Type"
      - $ref: "#/components/parameters/ID"
      - $ref: "#/components/parameters/Content-Type"
      - $ref: "#/components/parameters/Date"
      - $ref: "#/components/parameters/X-Forwarded-For"
      - $ref: "#/components/parameters/FSPIOP-Source"
      - $ref: "#/components/parameters/FSPIOP-Destination"
      - $ref: "#/components/parameters/FSPIOP-Encryption"
      - $ref: "#/components/parameters/FSPIOP-Signature"
      - $ref: "#/components/parameters/FSPIOP-URI"
      - $ref: "#/components/parameters/FSPIOP-HTTP-Method"
    get:
      description: >-
        The HTTP request `GET /parties/{Type}/{ID}` (or `GET
        /parties/{Type}/{ID}/{SubId}`) is used to look up information regarding
        the requested Party, defined by `{Type}`, `{ID}` and optionally
        `{SubId}` (for example, `GET /parties/MSISDN/123456789`, or `GET
        /parties/BUSINESS/shoecompany/employee1`).
      summary: Look up party information
      tags:
        - parties
      operationId: PartiesByTypeAndID
      parameters:
        - $ref: "#/components/parameters/Accept"
      responses:
        "202":
          $ref: "#/components/responses/202"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "405":
          $ref: "#/components/responses/405"
        "406":
          $ref: "#/components/responses/406"
        "501":
          $ref: "#/components/responses/501"
        "503":
          $ref: "#/components/responses/503"
    put:
      description: >-
        The callback `PUT /parties/{Type}/{ID}` (or `PUT
        /parties/{Type}/{ID}/{SubId}`) is used to inform the client of a
        successful result of the Party information lookup.
      summary: Return party information
      tags:
        - parties
      operationId: PartiesByTypeAndID2
      parameters:
        - $ref: "#/components/parameters/Content-Length"
      requestBody:
        description: Party information returned.
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GetParties_IdentificationVerificationReportV03
      responses:
        "200":
          $ref: "#/components/responses/200"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "405":
          $ref: "#/components/responses/405"
        "406":
          $ref: "#/components/responses/406"
        "501":
          $ref: "#/components/responses/501"
        "503":
          $ref: "#/components/responses/503"
  /parties/{Type}/{ID}/error:
    put:
      description: >-
        If the server is unable to find Party information of the provided
        identity, or another processing error occurred, the error callback `PUT
        /parties/{Type}/{ID}/error` (or `PUT /parties/{Type}/{ID}/{SubI}/error`)
        is used.
      summary: Return party information error
      tags:
        - parties
      operationId: PartiesErrorByTypeAndID
      parameters:
        - $ref: "#/components/parameters/Type"
        - $ref: "#/components/parameters/ID"
        - $ref: "#/components/parameters/Content-Length"
        - $ref: "#/components/parameters/Content-Type"
        - $ref: "#/components/parameters/Date"
        - $ref: "#/components/parameters/X-Forwarded-For"
        - $ref: "#/components/parameters/FSPIOP-Source"
        - $ref: "#/components/parameters/FSPIOP-Destination"
        - $ref: "#/components/parameters/FSPIOP-Encryption"
        - $ref: "#/components/parameters/FSPIOP-Signature"
        - $ref: "#/components/parameters/FSPIOP-URI"
        - $ref: "#/components/parameters/FSPIOP-HTTP-Method"
      requestBody:
        description: Details of the error returned.
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GetPartiesError_IdentificationVerificationReportV03
      responses:
        "200":
          $ref: "#/components/responses/200"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "405":
          $ref: "#/components/responses/405"
        "406":
          $ref: "#/components/responses/406"
        "501":
          $ref: "#/components/responses/501"
        "503":
          $ref: "#/components/responses/503"
  /parties/{Type}/{ID}/{SubId}:
    parameters:
      - $ref: "#/components/parameters/Type"
      - $ref: "#/components/parameters/ID"
      - $ref: "#/components/parameters/SubId"
      - $ref: "#/components/parameters/Content-Type"
      - $ref: "#/components/parameters/Date"
      - $ref: "#/components/parameters/X-Forwarded-For"
      - $ref: "#/components/parameters/FSPIOP-Source"
      - $ref: "#/components/parameters/FSPIOP-Destination"
      - $ref: "#/components/parameters/FSPIOP-Encryption"
      - $ref: "#/components/parameters/FSPIOP-Signature"
      - $ref: "#/components/parameters/FSPIOP-URI"
      - $ref: "#/components/parameters/FSPIOP-HTTP-Method"
    get:
      description: >-
        The HTTP request `GET /parties/{Type}/{ID}` (or `GET
        /parties/{Type}/{ID}/{SubId}`) is used to look up information regarding
        the requested Party, defined by `{Type}`, `{ID}` and optionally
        `{SubId}` (for example, `GET /parties/MSISDN/123456789`, or `GET
        /parties/BUSINESS/shoecompany/employee1`).
      summary: Look up party information
      tags:
        - parties
      operationId: PartiesSubIdByTypeAndID
      parameters:
        - $ref: "#/components/parameters/Accept"
      responses:
        "202":
          $ref: "#/components/responses/202"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "405":
          $ref: "#/components/responses/405"
        "406":
          $ref: "#/components/responses/406"
        "501":
          $ref: "#/components/responses/501"
        "503":
          $ref: "#/components/responses/503"
    put:
      description: >-
        The callback `PUT /parties/{Type}/{ID}` (or `PUT
        /parties/{Type}/{ID}/{SubId}`) is used to inform the client of a
        successful result of the Party information lookup.
      summary: Return party information
      tags:
        - parties
      operationId: PartiesSubIdByTypeAndIDPut
      parameters:
        - $ref: "#/components/parameters/Content-Length"
      requestBody:
        description: Party information returned.
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GetParties_IdentificationVerificationReportV03
      responses:
        "200":
          $ref: "#/components/responses/200"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "405":
          $ref: "#/components/responses/405"
        "406":
          $ref: "#/components/responses/406"
        "501":
          $ref: "#/components/responses/501"
        "503":
          $ref: "#/components/responses/503"
  /parties/{Type}/{ID}/{SubId}/error:
    put:
      description: >-
        If the server is unable to find Party information of the provided
        identity, or another processing error occurred, the error callback `PUT
        /parties/{Type}/{ID}/error` (or `PUT
        /parties/{Type}/{ID}/{SubId}/error`) is used.
      summary: Return party information error
      tags:
        - parties
      operationId: PartiesSubIdErrorByTypeAndID
      parameters:
        - $ref: "#/components/parameters/Type"
        - $ref: "#/components/parameters/ID"
        - $ref: "#/components/parameters/SubId"
        - $ref: "#/components/parameters/Content-Length"
        - $ref: "#/components/parameters/Content-Type"
        - $ref: "#/components/parameters/Date"
        - $ref: "#/components/parameters/X-Forwarded-For"
        - $ref: "#/components/parameters/FSPIOP-Source"
        - $ref: "#/components/parameters/FSPIOP-Destination"
        - $ref: "#/components/parameters/FSPIOP-Encryption"
        - $ref: "#/components/parameters/FSPIOP-Signature"
        - $ref: "#/components/parameters/FSPIOP-URI"
        - $ref: "#/components/parameters/FSPIOP-HTTP-Method"
      requestBody:
        description: Details of the error returned.
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GetPartiesError_IdentificationVerificationReportV03
      responses:
        "200":
          $ref: "#/components/responses/200"
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "405":
          $ref: "#/components/responses/405"
        "406":
          $ref: "#/components/responses/406"
        "501":
          $ref: "#/components/responses/501"
        "503":
          $ref: "#/components/responses/503"
components:
  parameters:
    Accept:
      name: Accept
      in: header
      required: true
      schema:
        type: string
      description: >-
        The `Accept` header field indicates the version of the API the client
        would like the server to use.
    Content-Length:
      name: Content-Length
      in: header
      required: false
      schema:
        type: integer
      description: >-
        The `Content-Length` header field indicates the anticipated size of the
        payload body. Only sent if there is a body.


        **Note:** The API supports a maximum size of 5242880 bytes (5
        Megabytes).
    Content-Type:
      name: Content-Type
      in: header
      schema:
        type: string
      required: true
      description: >-
        The `Content-Type` header indicates the specific version of the API used
        to send the payload body.
    Date:
      name: Date
      in: header
      schema:
        type: string
      required: true
      description: The `Date` header field indicates the date when the request was sent.
    FSPIOP-Destination:
      name: FSPIOP-Destination
      in: header
      schema:
        type: string
      required: false
      description: >-
        The `FSPIOP-Destination` header field is a non-HTTP standard field used
        by the API for HTTP header based routing of requests and responses to
        the destination. The field must be set by the original sender of the
        request if the destination is known (valid for all services except GET
        /parties) so that any entities between the client and the server do not
        need to parse the payload for routing purposes. If the destination is
        not known (valid for service GET /parties), the field should be left
        empty.
    FSPIOP-Encryption:
      name: FSPIOP-Encryption
      in: header
      schema:
        type: string
      required: false
      description: >-
        The `FSPIOP-Encryption` header field is a non-HTTP standard field used
        by the API for applying end-to-end encryption of the request.
    FSPIOP-HTTP-Method:
      name: FSPIOP-HTTP-Method
      in: header
      schema:
        type: string
      required: false
      description: >-
        The `FSPIOP-HTTP-Method` header field is a non-HTTP standard field used
        by the API for signature verification, should contain the service HTTP
        method. Required if signature verification is used, for more
        information, see [the API Signature
        document](https://github.com/mojaloop/docs/tree/main/Specification%20Document%20Set).
    FSPIOP-Signature:
      name: FSPIOP-Signature
      in: header
      schema:
        type: string
      required: false
      description: >-
        The `FSPIOP-Signature` header field is a non-HTTP standard field used by
        the API for applying an end-to-end request signature.
    FSPIOP-Source:
      name: FSPIOP-Source
      in: header
      schema:
        type: string
      required: true
      description: >-
        The `FSPIOP-Source` header field is a non-HTTP standard field used by
        the API for identifying the sender of the HTTP request. The field should
        be set by the original sender of the request. Required for routing and
        signature verification (see header field `FSPIOP-Signature`).
    FSPIOP-URI:
      name: FSPIOP-URI
      in: header
      schema:
        type: string
      required: false
      description: >-
        The `FSPIOP-URI` header field is a non-HTTP standard field used by the
        API for signature verification, should contain the service URI. Required
        if signature verification is used, for more information, see [the API
        Signature
        document](https://github.com/mojaloop/docs/tree/main/Specification%20Document%20Set).
    ID:
      name: ID
      in: path
      required: true
      schema:
        type: string
      description: The identifier value.
    SubId:
      name: SubId
      in: path
      required: true
      schema:
        type: string
      description: >-
        A sub-identifier of the party identifier, or a sub-type of the party
        identifier's type. For example, `PASSPORT`, `DRIVING_LICENSE`.
    Type:
      name: Type
      in: path
      required: true
      schema:
        type: string
      description: The type of the party identifier. For example, `MSISDN`, `PERSONAL_ID`.
    X-Forwarded-For:
      name: X-Forwarded-For
      in: header
      schema:
        type: string
      required: false
      description: >-
        The `X-Forwarded-For` header field is an unofficially accepted standard
        used for informational purposes of the originating client IP address, as
        a request might pass multiple proxies, firewalls, and so on. Multiple
        `X-Forwarded-For` values should be expected and supported by
        implementers of the API.


        **Note:** An alternative to `X-Forwarded-For` is defined in [RFC
        7239](https://tools.ietf.org/html/rfc7239). However, to this point RFC
        7239 is less-used and supported than `X-Forwarded-For`.
  responses:
    "200":
      description: OK
    "202":
      description: Accepted
    "400":
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInformationResponse"
      headers:
        Content-Length:
          $ref: "#/components/headers/Content-Length"
        Content-Type:
          $ref: "#/components/headers/Content-Type"
    "401":
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInformationResponse"
      headers:
        Content-Length:
          $ref: "#/components/headers/Content-Length"
        Content-Type:
          $ref: "#/components/headers/Content-Type"
    "403":
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInformationResponse"
      headers:
        Content-Length:
          $ref: "#/components/headers/Content-Length"
        Content-Type:
          $ref: "#/components/headers/Content-Type"
    "404":
      description: Not Found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInformationResponse"
      headers:
        Content-Length:
          $ref: "#/components/headers/Content-Length"
        Content-Type:
          $ref: "#/components/headers/Content-Type"
    "405":
      description: Method Not Allowed
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInformationResponse"
      headers:
        Content-Length:
          $ref: "#/components/headers/Content-Length"
        Content-Type:
          $ref: "#/components/headers/Content-Type"
    "406":
      description: Not Acceptable
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInformationResponse"
      headers:
        Content-Length:
          $ref: "#/components/headers/Content-Length"
        Content-Type:
          $ref: "#/components/headers/Content-Type"
    "501":
      description: Not Implemented
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInformationResponse"
      headers:
        Content-Length:
          $ref: "#/components/headers/Content-Length"
        Content-Type:
          $ref: "#/components/headers/Content-Type"
    "503":
      description: Service Unavailable
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorInformationResponse"
      headers:
        Content-Length:
          $ref: "#/components/headers/Content-Length"
        Content-Type:
          $ref: "#/components/headers/Content-Type"
  headers:
    Content-Length:
      required: false
      schema:
        type: integer
      description: >-
        The `Content-Length` header field indicates the anticipated size of the
        payload body. Only sent if there is a body.


        **Note:** The API supports a maximum size of 5242880 bytes (5
        Megabytes).
    Content-Type:
      schema:
        type: string
      required: true
      description: >-
        The `Content-Type` header indicates the specific version of the API used
        to send the payload body.
  schemas:
    AccountIdentification4Choice:
      title: AccountIdentification4Choice
      type: object
      description: >
        Specifies the unique identification of an account as assigned by the
        account servicer.
      anyOf:
        - properties:
            IBAN:
              allOf:
                - $ref: "#/components/schemas/IBAN2007Identifier"
                - description: >
                    IBAN

                    International Bank Account Number (IBAN) - identifier used
                    internationally by financial institutions to uniquely
                    identify the account of a customer. Further specifications
                    of the format and content of the IBAN can be found in the
                    standard ISO 13616 "Banking and related financial services -
                    International Bank Account Number (IBAN)" version
                    1997-10-01, or later revisions.
          required:
            - IBAN
        - properties:
            Othr:
              allOf:
                - $ref: "#/components/schemas/GenericAccountIdentification1"
                - description: >
                    Other

                    Unique identification of an account, as assigned by the
                    account servicer, using an identification scheme.
          required:
            - Othr
      example:
        IBAN: BE71096123456769
    AccountSchemeName1Choice:
      title: AccountSchemeName1Choice
      type: object
      description: |
        Sets of elements to identify a name of the identification scheme.
      anyOf:
        - properties:
            Cd:
              allOf:
                - $ref: "#/components/schemas/ExternalAccountIdentification1Code"
                - description: >
                    Code

                    Name of the identification scheme, in a coded form as
                    published in an external list.
          required:
            - Cd
        - properties:
            Prtry:
              allOf:
                - $ref: "#/components/schemas/Max35Text"
                - description: |
                    Proprietary
                    Name of the identification scheme, in a free text form.
          required:
            - Prtry
      example:
        Cd: 1111
    ActiveOrHistoricCurrencyCode:
      title: ActiveOrHistoricCurrencyCode
      type: string
      description: >
        A code allocated to a currency by a Maintenance Agency under an
        international identification scheme, as described in the latest edition
        of the international standard ISO 4217 "Codes for the representation of
        currencies and funds".

        NOTE: This has been modified away from the original ISO20022 pattern to
        enums.
      example: USD
      minLength: 3
      maxLength: 3
      enum:
        - AED
        - AFN
        - ALL
        - AMD
        - ANG
        - AOA
        - ARS
        - AUD
        - AWG
        - AZN
        - BAM
        - BBD
        - BDT
        - BGN
        - BHD
        - BIF
        - BMD
        - BND
        - BOB
        - BRL
        - BSD
        - BTN
        - BWP
        - BYN
        - BZD
        - CAD
        - CDF
        - CHF
        - CLP
        - CNY
        - COP
        - CRC
        - CUC
        - CUP
        - CVE
        - CZK
        - DJF
        - DKK
        - DOP
        - DZD
        - EGP
        - ERN
        - ETB
        - EUR
        - FJD
        - FKP
        - GBP
        - GEL
        - GGP
        - GHS
        - GIP
        - GMD
        - GNF
        - GTQ
        - GYD
        - HKD
        - HNL
        - HRK
        - HTG
        - HUF
        - IDR
        - ILS
        - IMP
        - INR
        - IQD
        - IRR
        - ISK
        - JEP
        - JMD
        - JOD
        - JPY
        - KES
        - KGS
        - KHR
        - KMF
        - KPW
        - KRW
        - KWD
        - KYD
        - KZT
        - LAK
        - LBP
        - LKR
        - LRD
        - LSL
        - LYD
        - MAD
        - MDL
        - MGA
        - MKD
        - MMK
        - MNT
        - MOP
        - MRO
        - MUR
        - MVR
        - MWK
        - MXN
        - MYR
        - MZN
        - NAD
        - NGN
        - NIO
        - NOK
        - NPR
        - NZD
        - OMR
        - PAB
        - PEN
        - PGK
        - PHP
        - PKR
        - PLN
        - PYG
        - QAR
        - RON
        - RSD
        - RUB
        - RWF
        - SAR
        - SBD
        - SCR
        - SDG
        - SEK
        - SGD
        - SHP
        - SLL
        - SOS
        - SPL
        - SRD
        - STD
        - SVC
        - SYP
        - SZL
        - THB
        - TJS
        - TMT
        - TND
        - TOP
        - TRY
        - TTD
        - TVD
        - TWD
        - TZS
        - UAH
        - UGX
        - USD
        - UYU
        - UZS
        - VEF
        - VND
        - VUV
        - WST
        - XAF
        - XCD
        - XDR
        - XOF
        - XPF
        - XTS
        - XXX
        - YER
        - ZAR
        - ZMW
        - ZWD
    AddressType2Code:
      description: |
        AddressType2Code
        Specifies the type of address.
        ADDR Address
        PBOX PostBox
        HOME Home
        BIZZ Business
        MLTO MailingTo
        DLVY Delivery
      enum:
        - ADDR
        - PBOX
        - HOME
        - BIZZ
        - MLTO
        - DLVY
      type: string
      example: ADDR
    AddressType3Choice:
      title: AddressType3Choice
      type: object
      description: |
        Choice of formats for the type of address.
      anyOf:
        - properties:
            Cd:
              allOf:
                - $ref: "#/components/schemas/AddressType2Code"
                - description: |
                    Code
                    Type of address expressed as a code.
          required:
            - Cd
        - properties:
            Prtry:
              allOf:
                - $ref: "#/components/schemas/GenericIdentification30"
                - description: |
                    Proprietary
                    Type of address expressed as a proprietary code.
          required:
            - Prtry
      example:
        Cd: ADDR
    AnyBICDec2014Identifier:
      title: AnyBICDec2014Identifier
      type: string
      description: >
        AnyBICDec2014Identifier

        Code allocated to a financial or non-financial institution by the

        ISO 9362 Registration Authority, as described in ISO 9362: 2014

        - "Banking - Banking telecommunication messages - Business identifier
        code (BIC)".
      pattern: ^[A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}$
      example: J5BMVH7D
    BICFIDec2014Identifier:
      title: BICFIDec2014Identifier
      type: string
      description: >
        Code allocated to a financial institution by the ISO 9362 Registration


        Authority as described in ISO 9362: 2014


        - "Banking - Banking telecommunication messages - Business identifier
        code (BIC)".
      pattern: ^[A-Z0-9]{4,4}[A-Z]{2,2}[A-Z0-9]{2,2}([A-Z0-9]{3,3}){0,1}$
      example: J5BMVH7D
    BranchAndFinancialInstitutionIdentification6:
      title: BranchAndFinancialInstitutionIdentification6
      type: object
      description: >
        Unique and unambiguous identification of a financial institution or a
        branch of a financial institution.
      properties:
        FinInstnId:
          allOf:
            - $ref: "#/components/schemas/FinancialInstitutionIdentification18"
            - description: >
                FinancialInstitutionIdentification

                Unique and unambiguous identification of a financial
                institution, as assigned under an internationally recognised or
                proprietary identification scheme.
        BrnchId:
          allOf:
            - $ref: "#/components/schemas/BranchData3"
            - description: >
                BranchIdentification

                Definition: Identifies a specific branch of a financial
                institution.

                Usage: This component should be used in case the identification
                information in the financial institution component does not
                provide identification up to branch level.
      required:
        - FinInstnId
      example:
        FinInstnId:
          BICFI: J5BMVH7D
        BrnchId:
          Id: 123
          Nm: Name
          PstlAdr:
            AdrTp: ADDR
            Dept: Department
            SubDept: Sub department
            StrtNm: Street name
            BldgNb: Building number
            PstCd: Post code
            TwnNm: Town name
            CtrySubDvsn: Country subdivision
            Ctry: Country
            AdrLine: Address line
    BranchData3:
      title: BranchData3
      type: object
      description: >
        Information that locates and identifies a specific branch of a financial
        institution.
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/Max35Text"
            - description: >
                Identification

                Unique and unambiguous identification of a branch of a financial
                institution.
        LEI:
          allOf:
            - $ref: "#/components/schemas/LEIIdentifier"
            - description: >
                Legal Entity Identifier

                Legal entity identification for the branch of the financial
                institution.
        Nm:
          allOf:
            - $ref: "#/components/schemas/Max140Text"
            - description: >
                Name

                Name by which an agent is known and which is usually used to
                identify that agent.
        PstlAdr:
          allOf:
            - $ref: "#/components/schemas/PostalAddress24"
            - description: >
                Postal Address

                Information that locates and identifies a specific address, as
                defined by postal services.
      example:
        Id: 123
        Nm: Name
        PstlAdr:
          AdrTp: ADDR
          Dept: Department
          SubDept: Sub department
          StrtNm: Street name
          BldgNb: Building number
          PstCd: Post code
          TwnNm: Town name
          CtrySubDvsn: Country subdivision
          Ctry: Country
          AdrLine: Address line
    CashAccount40:
      title: CashAccount40
      type: object
      description: |
        Provides the details to identify an account.
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/AccountIdentification4Choice"
            - description: >
                Identification

                Unique and unambiguous identification for the account between
                the account owner and the account servicer.
        Tp:
          allOf:
            - $ref: "#/components/schemas/CashAccountType2Choice"
            - description: |
                Type
                Specifies the nature, or use of the account.
        Ccy:
          allOf:
            - $ref: "#/components/schemas/ActiveOrHistoricCurrencyCode"
            - description: >
                Currency

                Identification of the currency in which the account is held.

                Usage: Currency should only be used in case one and the same
                account number covers several currencies and the initiating
                party needs to identify which currency needs to be used for
                settlement on the account.
        Nm:
          allOf:
            - $ref: "#/components/schemas/Max70Text"
            - description: >
                Name

                Name of the account, as assigned by the account servicing
                institution, in agreement with the account owner in order to
                provide an additional means of identification of the account.

                Usage: The account name is different from the account owner
                name. The account name is used in certain user communities to
                provide a means of identifying the account, in addition to the
                account owner's identity and the account number.
        Prxy:
          allOf:
            - $ref: "#/components/schemas/ProxyAccountIdentification1"
            - description: >
                Proxy

                Specifies an alternate assumed name for the identification of
                the account.
      example:
        Id:
          IBAN: BE71096123456769
        Tp:
          Cd: CACC
        Ccy: EUR
        Nm: My account
        Prxy:
          Id: 12345
    CashAccountType2Choice:
      title: CashAccountType2Choice
      description: |
        Specifies the nature, or use of the account.
      type: object
      anyOf:
        - properties:
            Cd:
              allOf:
                - $ref: "#/components/schemas/ExternalCashAccountType1Code"
                - description: |
                    Code
                    Account type, in a coded form.
          required:
            - Cd
        - properties:
            Prtry:
              allOf:
                - $ref: "#/components/schemas/Max35Text"
                - description: |
                    Proprietary
                    Nature or use of the account in a proprietary form.
          required:
            - Prtry
      example:
        Cd: CACC
    ClearingSystemIdentification2Choice:
      title: ClearingSystemIdentification2Choice
      description: |
        Specifies the clearing system identification.
      type: object
      anyOf:
        - properties:
            Cd:
              allOf:
                - $ref: >-
                    #/components/schemas/ExternalClearingSystemIdentification1Code
                - description: >
                    Code

                    Clearing system identification code, as published in an
                    external list.
          required:
            - Cd
        - properties:
            Prtry:
              allOf:
                - $ref: "#/components/schemas/Max35Text"
                - description: |
                    Proprietary
                    Proprietary identification of the clearing system.
          required:
            - Prtry
      example:
        Cd: CHIPS
    ClearingSystemMemberIdentification2:
      title: ClearingSystemMemberIdentification2
      description: >
        Unique identification, as assigned by a clearing system, to
        unambiguously identify a member of the clearing system.
      type: object
      properties:
        ClrSysId:
          allOf:
            - $ref: "#/components/schemas/ClearingSystemIdentification2Choice"
            - description: >
                ClearingSystemIdentification

                Specification of a pre-agreed offering between clearing agents
                or the channel through which the payment instruction is
                processed.
        MmbId:
          allOf:
            - $ref: "#/components/schemas/Max35Text"
            - description: |
                MemberIdentification
                Identification of a member of a clearing system.
      required:
        - MmbId
      example:
        ClrSysId:
          Cd: CHQB
        MmbId: 123456789
    Contact4:
      title: Contact4
      description: |
        Specifies the details of the contact person.
      type: object
      properties:
        NmPrfx:
          allOf:
            - $ref: "#/components/schemas/NamePrefix2Code"
            - description: |
                NamePrefix
                Name prefix to be used before the name of the person.
        Nm:
          allOf:
            - $ref: "#/components/schemas/Max140Text"
            - description: >
                Name

                Name by which a party is known and which is usually used to
                identify that party.
        PhneNb:
          allOf:
            - $ref: "#/components/schemas/PhoneNumber"
            - description: >
                PhoneNumber

                Collection of information that identifies a phone number, as
                defined by telecom services.
        MobNb:
          allOf:
            - $ref: "#/components/schemas/PhoneNumber"
            - description: >
                MobilePhoneNumber

                Collection of information that identifies a mobile phone number,
                as defined by telecom services.
        FaxNb:
          allOf:
            - $ref: "#/components/schemas/PhoneNumber"
            - description: >
                FaxNumber

                Collection of information that identifies a fax number, as
                defined by telecom services.
        EmailAdr:
          allOf:
            - $ref: "#/components/schemas/Max2048Text"
            - description: |
                EmailAddress
                Address for electronic mail (e-mail).
        EmailPurp:
          allOf:
            - $ref: "#/components/schemas/Max35Text"
            - description: |
                EmailPurpose
                Purpose for which an email address may be used.
        JobTitl:
          allOf:
            - $ref: "#/components/schemas/Max35Text"
            - description: |
                JobTitle
                Title of the function.
        Rspnsblty:
          allOf:
            - $ref: "#/components/schemas/Max35Text"
            - description: |
                Responsibility
                Role of a person in an organisation.
        Dept:
          allOf:
            - $ref: "#/components/schemas/Max70Text"
            - description: >
                Department

                Identification of a division of a large organisation or
                building.
        Othr:
          allOf:
            - $ref: "#/components/schemas/OtherContact1"
            - description: |
                Other
                Contact details in another form.
        PrefrdMtd:
          allOf:
            - $ref: "#/components/schemas/PreferredContactMethod1Code"
            - description: |
                PreferredMethod
                Preferred method used to reach the contact.
      example:
        NmPrfx: Mr
        Nm: John Doe
        PhneNb: +123-123-321
        MobNb: +123-123-321
        FaxNb: +123-123-321
        EmailAdr: example@example.com
    CountryCode:
      title: CountryCode
      type: string
      pattern: ^[A-Z]{2,2}$
      example: US
      description: >
        Code to identify a country, a dependency, or another area of particular
        geopolitical interest, on the basis of country names obtained from the
        United Nations (ISO 3166, Alpha-2 code).
    DateAndPlaceOfBirth1:
      title: DateAndPlaceOfBirth1
      description: |
        Details about date and place of birth of a person.
      type: object
      properties:
        BirthDt:
          allOf:
            - $ref: "#/components/schemas/ISODate"
            - description: |
                BirthDate
                Date on which a person was born.
        PrvcOfBirth:
          allOf:
            - $ref: "#/components/schemas/Max35Text"
            - description: |
                ProvinceOfBirth
                Province where a person was born.
        CityOfBirth:
          allOf:
            - $ref: "#/components/schemas/Max35Text"
            - description: |
                CityOfBirth
                City where a person was born.
        CtryOfBirth:
          allOf:
            - $ref: "#/components/schemas/CountryCode"
            - description: |
                CountryOfBirth
                Country where a person was born.
      required:
        - BirthDt
        - CityOfBirth
        - CtryOfBirth
      example:
        BirthDt: "1970-01-01"
        PrvcOfBirth: "ON"
        CityOfBirth: Ottawa
        CtryOfBirth: CA
    ErrorCode:
      title: ErrorCode
      type: string
      pattern: ^[1-9]\d{3}$
      description: >-
        The API data type ErrorCode is a JSON String of four characters,
        consisting of digits only. Negative numbers are not allowed. A leading
        zero is not allowed. Each error code in the API is a four-digit number,
        for example, 1234, where the first number (1 in the example) represents
        the high-level error category, the second number (2 in the example)
        represents the low-level error category, and the last two numbers (34 in
        the example) represent the specific error.
      example: "5100"
    ErrorDescription:
      title: ErrorDescription
      type: string
      minLength: 1
      maxLength: 128
      description: Error description string.
    ErrorInformation:
      title: ErrorInformation
      type: object
      description: Data model for the complex type ErrorInformation.
      properties:
        errorCode:
          $ref: "#/components/schemas/ErrorCode"
        errorDescription:
          $ref: "#/components/schemas/ErrorDescription"
        extensionList:
          $ref: "#/components/schemas/ExtensionList"
      required:
        - errorCode
        - errorDescription
    ErrorInformationResponse:
      title: ErrorInformationResponse
      type: object
      description: >
        Data model for the complex type object that contains an optional element
        ErrorInformation used along with 4xx and 5xx responses.
      properties:
        errorInformation:
          $ref: "#/components/schemas/ErrorInformation"
    Exact4AlphaNumericText:
      title: Exact4AlphaNumericText
      description: |
        Specifies an alphanumeric string with a length of 4 characters.
      type: string
      pattern: ^[a-zA-Z0-9]{4}$
      example: 1234
    Extension:
      title: Extension
      type: object
      description: Data model for the complex type Extension.
      properties:
        key:
          $ref: "#/components/schemas/ExtensionKey"
        value:
          $ref: "#/components/schemas/ExtensionValue"
      required:
        - key
        - value
    ExtensionKey:
      title: ExtensionKey
      type: string
      minLength: 1
      maxLength: 32
      description: Extension key.
    ExtensionList:
      title: ExtensionList
      type: object
      description: >
        Data model for the complex type ExtensionList. An optional list of
        extensions, specific to deployment.
      properties:
        extension:
          type: array
          items:
            $ref: "#/components/schemas/Extension"
          minItems: 1
          maxItems: 16
          description: Number of Extension elements.
      required:
        - extension
    ExtensionValue:
      title: ExtensionValue
      type: string
      minLength: 1
      maxLength: 128
      description: Extension value.
    ExternalAccountIdentification1Code:
      title: ExternalAccountIdentification1Code
      description: >
        Specifies the external account identification scheme name code in the
        format of character string with a maximum length of 4 characters.
      type: string
      minLength: 1
      maxLength: 4
      example: 1234
    ExternalCashAccountType1Code:
      title: ExternalCashAccountType1Code
      description: >
        Specifies the nature, or use, of the cash account in the format of
        character string with a maximum length of 4 characters.
      type: string
      minLength: 1
      maxLength: 4
      example: 1234
    ExternalClearingSystemIdentification1Code:
      title: ExternalClearingSystemIdentification1Code
      description: |
        Specifies the external clearing system identification code.
      type: string
      minLength: 1
      maxLength: 5
      example: 12345
    ExternalFinancialInstitutionIdentification1Code:
      title: ExternalFinancialInstitutionIdentification1Code
      description: Specifies the external financial institution identification code.
      type: string
      minLength: 1
      maxLength: 4
      example: 1234
    ExternalOrganisationIdentification1Code:
      title: ExternalOrganisationIdentification1Code
      description: Specifies the external organisation identification code.
      type: string
      minLength: 1
      maxLength: 4
      example: 1234
    ExternalPersonIdentification1Code:
      title: ExternalPersonIdentification1Code
      description: Specifies the external person identification code.
      type: string
      minLength: 1
      maxLength: 4
      example: 1234
    ExternalProxyAccountType1Code:
      title: ExternalProxyAccountType1Code
      description: Specifies the external proxy account type code.
      type: string
      minLength: 1
      maxLength: 4
      example: 1234
    ExternalVerificationReason1Code:
      title: ExternalVerificationReason1Code
      description: Specifies the external verification reason code.
      type: string
      minLength: 1
      maxLength: 4
      example: 1234
    FinancialIdentificationSchemeName1Choice:
      title: FinancialIdentificationSchemeName1Choice
      type: object
      description: |
        Specifies the name of the identification scheme.
      anyOf:
        - properties:
            Cd:
              allOf:
                - $ref: >-
                    #/components/schemas/ExternalFinancialInstitutionIdentification1Code
                - description: >
                    Code

                    Name of the identification scheme, in a coded form as
                    published in an external list.
          required:
            - Cd
        - properties:
            Prtry:
              allOf:
                - $ref: "#/components/schemas/Max35Text"
                - description: |
                    Proprietary
                    Name of the identification scheme, in a free text form.
          required:
            - Prtry
      example:
        Cd: BIC
    FinancialInstitutionIdentification18:
      title: FinancialInstitutionIdentification18
      type: object
      description: |
        Information used to identify a financial institution.
      properties:
        BICFI:
          allOf:
            - $ref: "#/components/schemas/BICFIDec2014Identifier"
            - description: >
                BICFI

                Code allocated to a financial institution by the ISO 9362
                Registration Authority as described in ISO 9362 "Banking -
                Banking telecommunication messages - Business identifier code
                (BIC)"
        ClrSysMmbId:
          allOf:
            - $ref: "#/components/schemas/ClearingSystemMemberIdentification2"
            - description: |
                ClearingSystemMemberIdentification
                Information used to identify a member within a clearing system
        LEI:
          allOf:
            - $ref: "#/components/schemas/LEIIdentifier"
            - description: |
                LEI
                Legal entity identifier of the financial institution.
        Nm:
          allOf:
            - $ref: "#/components/schemas/Max140Text"
            - description: >
                Name

                Name by which an agent is known and which is usually used to
                identify that agent
        PstlAdr:
          allOf:
            - $ref: "#/components/schemas/PostalAddress24"
            - description: >
                PostalAddress

                Information that locates and identifies a specific address, as
                defined by postal services.
        Othr:
          allOf:
            - $ref: "#/components/schemas/GenericFinancialIdentification1"
            - description: >
                Other

                Unique identification of an agent, as assigned by an
                institution, using an identification scheme.
      required: []
      example:
        BICFI: J5BMVH7D
        ClrSysMmbId:
          ClrSysId: 1234
          MmbId: 123
        LEI: 123
        Nm: Name
        PstlAdr:
          AdrTp: ADDR
          Dept: Department
          SubDept: Sub department
          StrtNm: Street name
          BldgNb: Building number
          PstCd: Post code
          TwnNm: Town name
          CtrySubDvsn: Country subdivision
          Ctry: Country
          AdrLine: Address line
        Othr:
          Id: 123
          SchmeNm:
            Cd: 123
            Prtry: 123
          Issr: 123
    GenericAccountIdentification1:
      title: GenericAccountIdentification1
      type: object
      description: >
        GenericAccountIdentification

        Unique and unambiguous identification of an account, as assigned by the
        account servicer.
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/Max34Text"
            - description: |
                Identification
                Identification assigned by an institution.
        SchmeNm:
          allOf:
            - $ref: "#/components/schemas/AccountSchemeName1Choice"
            - description: |
                SchemeName
                Name of the identification scheme.
        Issr:
          allOf:
            - $ref: "#/components/schemas/Max35Text"
            - description: |
                Issuer
                Entity that assigns the identification.
      required:
        - Id
      example:
        Id: 123
        SchmeNm:
          Cd: IBAN
        Issr: BIC
    GenericFinancialIdentification1:
      title: GenericFinancialIdentification1
      type: object
      description: >
        GenericFinancialIdentification

        Unique and unambiguous identification of a person, which is used to
        refer to a person in a financial context.
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/Max35Text"
            - description: |
                Identification
                Unique and unambiguous identification of a person.
        SchmeNm:
          allOf:
            - $ref: "#/components/schemas/FinancialIdentificationSchemeName1Choice"
            - description: |
                SchemeName
                Name of the identification scheme.
        Issr:
          allOf:
            - $ref: "#/components/schemas/Max35Text"
            - description: |
                Issuer
                Entity that assigns the identification.
      required:
        - Id
      example:
        Id: 123
        SchmeNm:
          Cd: IBAN
        Issr: BIC
    GenericIdentification30:
      title: GenericIdentification30
      type: object
      description: |
        Generic scheme identification for a party.
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/Exact4AlphaNumericText"
            - description: >
                Identification

                Proprietary information, often a code, issued by the data source
                scheme issuer.
        Issr:
          allOf:
            - $ref: "#/components/schemas/Max35Text"
            - description: |
                Issuer
                Entity that assigns the identification.
        SchmeNm:
          allOf:
            - $ref: "#/components/schemas/Max35Text"
            - description: |
                SchemeName
                Short textual description of the scheme.
      required:
        - Id
        - Issr
      example:
        Id: 1234
        Issr: BIC
        SchmeNm: BICFI
    GenericOrganisationIdentification1:
      title: GenericOrganisationIdentification1
      type: object
      description: |
        Information that locates and identifies an organisation.
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/Max35Text"
            - description: >
                Identification for an organisation. FSPIOP equivalent to Party
                Identifier for an organisation in ISO 20022. Identification
                assigned by an institution.
        SchmeNm:
          allOf:
            - $ref: "#/components/schemas/OrganisationIdentificationSchemeName1Choice"
            - description: |
                SchemeName
                Name of the identification scheme.
        Issr:
          allOf:
            - $ref: "#/components/schemas/Max35Text"
            - description: |
                Issuer
                Entity that assigns the identification.
      required:
        - Id
      example:
        Id: 123
        SchmeNm:
          Cd: BIC
        Issr: BIC
    GenericPersonIdentification1:
      title: GenericPersonIdentification1
      type: object
      description: |
        GenericPersonIdentification1
        Information that locates and identifies a specific person.
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/Max35Text"
            - description: |
                Identification
                Unique and unambiguous identification of a person.
        SchmeNm:
          allOf:
            - $ref: "#/components/schemas/PersonIdentificationSchemeName1Choice"
            - description: |
                SchemeName
                Name of the identification scheme.
        Issr:
          allOf:
            - $ref: "#/components/schemas/Max35Text"
            - description: |
                Issuer
                Entity that assigns the identification.
      required:
        - Id
      example:
        Id: 123
        SchmeNm:
          Cd: DRLC
        Issr: BIC
    GetPartiesError_IdentificationVerificationReportV03:
      title: GetPartiesError_IdentificationVerificationReportV03
      type: object
      properties:
        Assgnmt:
          allOf:
            - $ref: "#/components/schemas/IdentificationAssignment3"
            - description: |
                Assignment
                Information related to the identification assignment.
        Rpt:
          allOf:
            - $ref: "#/components/schemas/VerificationReport4"
            - description: >
                Report

                Information concerning the verification of the identification
                data for which verification was requested.
        SplmtryData:
          allOf:
            - $ref: "#/components/schemas/SupplementaryData1"
            - description: >
                SupplementaryData

                Additional information that cannot be captured in the structured
                elements and/or any other specific block.
      required:
        - Assgnmt
        - Rpt
      example:
        Assgnmt:
          Id: 123
          CreDtTm: "2020-01-01T00:00:00Z"
          Assgnr:
            Id:
              Id: 123
              SchmeNm:
                Cd: IBAN
              Issr: BIC
          Assgne:
            Id:
              Id: 123
              SchmeNm:
                Cd: IBAN
              Issr: BIC
        Rpt:
          Id: 123
          CreDtTm: "2020-01-01T00:00:00Z"
          RptgPty:
            Id:
              Id: 123
              SchmeNm:
                Cd: IBAN
              Issr: BIC
          RptdPty:
            Id:
              Id: 123
              SchmeNm:
                Cd: IBAN
              Issr: BIC
          RptdDoc:
            Nb: 123
            RltdDt: "2013-03-07"
            RltdDtTp:
              Cd: 123
          Rsn:
            Cd: 123
            Prtry: 123
        SplmtryData:
          PlcAndNm: 123
          Envlp: 123
          RltdDt: "2013-03-07"
          RltdDtTp:
            Cd: 123
    GetParties_IdentificationVerificationReportV03:
      title: GetParties_IdentificationVerificationReportV03
      type: object
      properties:
        Assgnmt:
          allOf:
            - $ref: "#/components/schemas/IdentificationAssignment3"
            - description: |
                Assignment
                Identifies the identification assignment.
        Rpt:
          allOf:
            - $ref: "#/components/schemas/VerificationReport4"
            - description: >
                Report

                Information concerning the verification of the identification
                data for which verification was requested.
        SplmtryData:
          allOf:
            - $ref: "#/components/schemas/SupplementaryData1"
            - description: >
                SupplementaryData

                Additional information that cannot be captured in the structured
                elements and/or any other specific block.
      required:
        - Assgnmt
        - Rpt
      example:
        Assgnmt:
          MsgId: 123
          CreDtTm: "2020-01-01T00:00:00Z"
          Assgnr:
            OrgId:
              Othr:
                Id: 123
                SchmeNm:
                  Cd: BIC
                Issr: BIC
          Assgne:
            OrgId:
              Othr:
                Id: DFSPID
        Rpt:
          OrgnlId: 12345678
          Vrfctn: true
          UpdtdPtyAndAcctId:
            Pty:
              Nm: John Doe
              PstlAdr:
                AdrTp: ADDR
                Dept: Dept
                SubDept: SubDept
                StrtNm: StrtNm
                BldgNb: BldgNb
                BldgNm: BldgNm
                Flr: Flr
                PstBx: PstBx
                Room: Room
                PstCd: PstCd
                TwnNm: TwnNm
                TwnLctnNm: TwnLctnNm
                DstrctNm: DstrctNm
                CtrySubDvsn: CtrySubDvsn
                Ctry: Ctry
                AdrLine: AdrLine
              Id:
                OrgId:
                  Othr:
                    Id: 18761231234
                  SchmeNm:
                    Prtry: MSISDN
              CtryOfRes: BE
              CtctDtls:
                NmPrfx: Mr
                Nm: John Doe
                PhneNb: +123-123-321
                MobNb: +123-123-321
                FaxNb: +123-123-321
                EmailAdr: example@example.com
    IBAN2007Identifier:
      title: IBAN2007Identifier
      description: >
        The International Bank Account Number is a code used internationally by
        financial institutions to uniquely identify the account of a customer at
        a financial institution as described in the 2007 edition of the ISO
        13616 standard "Banking and related financial services -

        International Bank Account Number (IBAN)" and replaced by the more
        recent edition of the standard.
      type: string
      example: FR1420041010050500013M02606
      pattern: ^[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}$
    ISODate:
      title: ISODate
      description: >
        A particular point in the progression of time in a calendar year
        expressed in the YYYY-MM-DD format. This representation is defined in
        "XML Schema Part 2: Datatypes Second Edition - W3C Recommendation 28
        October 2004" which is aligned with ISO 8601.
      type: string
      example: "2013-03-07"
    ISODateTime:
      title: ISODateTime
      description: >
        A particular point in the progression of time defined by a mandatory

        date and a mandatory time component, expressed in either UTC time

        format (YYYY-MM-DDThh:mm:ss.sssZ), local time with UTC offset format

        (YYYY-MM-DDThh:mm:ss.sss+/-hh:mm), or local time format

        (YYYY-MM-DDThh:mm:ss.sss). These representations are defined in

        "XML Schema Part 2: Datatypes Second Edition -

        W3C Recommendation 28 October 2004" which is aligned with ISO 8601.


        Note on the time format:

        1) beginning / end of calendar day

        00:00:00 = the beginning of a calendar day

        24:00:00 = the end of a calendar day


        2) fractions of second in time format

        Decimal fractions of seconds may be included. In this case, the

        involved parties shall agree on the maximum number of digits that are
        allowed.
      type: string
      pattern: >-
        ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:(\.\d{3}))(?:Z|[+-][01]\d:[0-5]\d)$
      example: "2013-03-07T14:44:30.000Z"
    IdentificationAssignment3:
      title: IdentificationAssignment3
      type: object
      description: >
        IdentificationAssignment

        Information that unambiguously identifies a message, as assigned by the
        assignor to the assignee.
      properties:
        MsgId:
          allOf:
            - $ref: "#/components/schemas/Max35Text"
            - description: >
                MessageIdentification

                Unique identification, as assigned by the assigner, to
                unambiguously identify the message.
        CreDtTm:
          allOf:
            - $ref: "#/components/schemas/ISODateTime"
            - description: >
                CreationDateTime

                Date and time at which the identification assignment was
                created.
        Assgnr:
          allOf:
            - $ref: "#/components/schemas/Party40Choice"
            - description: >
                Assignor

                Party that assigns the identification assignment to another
                party. This is also the sender of the message.
        Assgne:
          allOf:
            - $ref: "#/components/schemas/Party40Choice"
            - description: >
                Assignee

                Party that the identification assignment is assigned to. This is
                also the receiver of the message.
      required:
        - MsgId
        - CreDtTm
        - Assgnr
        - Assgne
      example:
        MsgId: 123
        CreDtTm: "2020-01-01T00:00:00Z"
        Assgnr:
          OrgId:
            Othr:
              Id: 123
              SchmeNm:
                Cd: BIC
              Issr: BIC
        Assgne:
          OrgId:
            Othr:
              Id: 123
              SchmeNm:
                Cd: BIC
              Issr: BIC
    IdentificationInformation4:
      title: IdentificationInformation4
      type: object
      description: |
        Information that locates and identifies a specific party or account.
      properties:
        Pty:
          allOf:
            - $ref: "#/components/schemas/PartyIdentification135"
            - description: >
                Party

                Account owner that owes an amount of money or to whom an amount
                of money is due.
        Acct:
          allOf:
            - $ref: "#/components/schemas/CashAccount40"
            - description: |
                Account
                Unambiguous identification of the account of a party.
        Agt:
          allOf:
            - $ref: >-
                #/components/schemas/BranchAndFinancialInstitutionIdentification6
            - description: |
                Agent
                Financial institution servicing an account for a party.
      required:
        - Pty
      example:
        Pty:
          Id:
            OrgId:
              AnyBIC:
                BICFI: BICFI
          CtryOfRes: FI
        Acct:
          Id:
            IBAN: FI2112345600000785
        Agt:
          FinInstnId:
            BICFI: BICFI
    IdentificationVerificationIndicator:
      title: IdentificationVerificationIndicator
      type: boolean
      example: true
      description: >
        Definition: Identifies whether the party and/or account information
        received is correct.


        • Meaning When True: Indicates that the identification information
        received is correct.

        • Meaning When False: Indicates that the identification information
        received is incorrect
    LEIIdentifier:
      title: LEIIdentifier
      description: >
        Legal Entity Identifier is a code allocated to a party as described in
        ISO 17442 "Financial Services - Legal Entity Identifier (LEI)".
        ^([0-9A-Z]{18,18}[0-9]{2,2})$
      type: string
      pattern: ^[A-Z0-9]{18,18}[0-9]{2,2}$
      example: 529900T8BM49AURSDO55
    Max128Text:
      title: Max128Text
      description: |
        Specifies a character string with a maximum length of 128 characters.
      type: string
      minLength: 1
      maxLength: 128
      example: 12345
    Max140Text:
      title: Max140Text
      description: |
        Specifies a character string with a maximum length of 140 characters.
      type: string
      minLength: 1
      maxLength: 140
      example: 12345
    Max16Text:
      title: Max16Text
      description: |
        Specifies a character string with a maximum length of 16 characters.
      type: string
      minLength: 1
      maxLength: 16
      example: 1234567890123456
    Max2048Text:
      title: Max2048Text
      description: |
        Specifies a character string with a maximum length of 2048 characters.
      type: string
      minLength: 1
      maxLength: 2048
      example: 2048
    Max34Text:
      title: Max34Text
      description: |
        Specifies a character string with a maximum length of 34 characters.
      type: string
      minLength: 1
      maxLength: 34
      example: 1.2345678901234568e+33
    Max350Text:
      title: Max350Text
      description: |
        Specifies a character string with a maximum length of 350 characters.
      type: string
      minLength: 1
      maxLength: 350
      example: 350
    Max35Text:
      title: Max35Text
      description: |
        Specifies a character string with a maximum length of 35 characters.
      type: string
      minLength: 1
      maxLength: 35
      example: 1.234567890123457e+34
    Max4Text:
      title: Max4Text
      description: |
        Specifies a character string with a maximum length of 4 characters.
      type: string
      minLength: 1
      maxLength: 4
      example: 1234
    Max70Text:
      title: Max70Text
      description: |
        Specifies a character string with a maximum length of 70 characters.
      type: string
      minLength: 1
      maxLength: 70
      example: 1.2345678901234567e+99
    NamePrefix2Code:
      description: |
        Specifies the terms used to formally address a person.

        DOCT: Doctor or Dr
        MADM: Madam
        MISS: Miss
        MIST: Mistress
        MIKS: Mx
      enum:
        - DOCT
        - MADM
        - MISS
        - MIST
        - MIKS
      type: string
      example: DOCT
    OrganisationIdentification29:
      title: OrganisationIdentification29
      description: |
        Unique and unambiguous way to identify an organisation.
      type: object
      properties:
        AnyBIC:
          allOf:
            - $ref: "#/components/schemas/AnyBICDec2014Identifier"
            - description: |
                AnyBIC
                Business identification code of the organisation.
        LEI:
          allOf:
            - $ref: "#/components/schemas/LEIIdentifier"
            - description: >
                LEI

                Legal entity identification as an alternate identification for a
                party.
        Othr:
          allOf:
            - $ref: "#/components/schemas/GenericOrganisationIdentification1"
            - description: >
                Other

                Unique identification of an organisation, as assigned by an
                institution, using an identification scheme.
      example:
        AnyBIC: BICFI
        LEI: 529900T8BM49AURSDO55
        Othr:
          Id: 123
          SchmeNm:
            Cd: BIC
          Issr: BIC
    OrganisationIdentificationSchemeName1Choice:
      title: OrganisationIdentificationSchemeName1Choice
      description: |
        Choice of format for the organisation identification.
      type: object
      properties:
        Cd:
          allOf:
            - $ref: "#/components/schemas/ExternalOrganisationIdentification1Code"
            - description: >
                Code

                Name of the identification scheme, in a coded form as published
                in an external list.
        Prtry:
          allOf:
            - $ref: "#/components/schemas/Max35Text"
            - description: |
                Proprietary
                Name of the identification scheme, in a free text form.
      anyOf:
        - properties:
            Cd: {}
        - properties:
            Prtry: {}
      example:
        Cd: BIC
    OtherContact1:
      title: OtherContact1
      description: >
        Communication device number or electronic address used for
        communication.
      type: object
      properties:
        ChanlTp:
          allOf:
            - $ref: "#/components/schemas/Max4Text"
            - description: >
                ChannelType

                Method used to contact the financial institution's contact for
                the specific tax region.
        Id:
          allOf:
            - $ref: "#/components/schemas/Max128Text"
            - description: |
                Identifier
                Communication value such as phone number or email address.
      required:
        - ChanlTp
      example:
        ChanlTp: PHON
        Id: 1234567890
    Party38Choice:
      title: Party38Choice
      description: |
        Nature or use of the account.
      type: object
      anyOf:
        - properties:
            OrgId:
              allOf:
                - $ref: "#/components/schemas/OrganisationIdentification29"
                - description: |
                    Organisation
                    Unique and unambiguous way to identify an organisation.
          required:
            - OrgId
        - properties:
            PrvtId:
              allOf:
                - $ref: "#/components/schemas/PersonIdentification13"
                - description: >
                    PrivateIdentification

                    Unique and unambiguous identification of a person, for
                    example a passport.
          required:
            - PrvtId
      example:
        OrgId:
          AnyBIC: BIC
        PrvtId:
          DtAndPlcOfBirth:
            Dt: "2018-01-01"
            CityOfBirth: City
    Party40Choice:
      title: Party40Choice
      description: |
        Identification of a person, an organisation or a financial institution.
      type: object
      anyOf:
        - properties:
            Pty:
              allOf:
                - $ref: "#/components/schemas/PartyIdentification135"
                - description: |
                    Party
                    Identification of a person or an organisation.
          required:
            - Pty
        - properties:
            Agt:
              allOf:
                - $ref: >-
                    #/components/schemas/BranchAndFinancialInstitutionIdentification6
                - description: |
                    Agent
                    Identification of a financial institution.
          required:
            - Agt
      example:
        Pty:
          Nm: Name
          PstlAdr:
            Ctry: US
            AdrLine:
              - Line1
              - Line2
          Id:
            OrgId:
              AnyBIC: BIC
        Agt:
          FinInstnId:
            BICFI: BUKBGB22
          BrnchId:
            Id: 12345
            Nm: Oxford Street Branch
            PstlAdr:
              Ctry: GB
              AdrLine:
                - 1 Oxford Street
                - London
                - UK
    PartyIdentification135:
      title: PartyIdentification135
      description: |
        Specifies the identification of a person or an organisation.
      type: object
      properties:
        Nm:
          allOf:
            - $ref: "#/components/schemas/Max140Text"
            - description: >
                Name

                Name by which a party is known and which is usually used to
                identify that party.
        PstlAdr:
          allOf:
            - $ref: "#/components/schemas/PostalAddress24"
            - description: >
                PostalAddress

                Information that locates and identifies a specific address, as
                defined by postal services.
        Id:
          allOf:
            - $ref: "#/components/schemas/Party38Choice"
            - description: |
                Identification
                Unique and unambiguous way to identify an organisation.
        CtryOfRes:
          allOf:
            - $ref: "#/components/schemas/CountryCode"
            - description: >
                CountryOfResidence

                Country in which a person resides (the place of a person's
                home). In the case of a company, it is the country from which
                the affairs of that company are directed.
        CtctDtls:
          allOf:
            - $ref: "#/components/schemas/Contact4"
            - description: |
                ContactDetails
                Set of elements used to indicate how to contact the party.
      required:
        - Id
      example:
        Nm: John Doe
        PstlAdr:
          AdrTp: ADDR
          Dept: Dept
          SubDept: SubDept
          StrtNm: StrtNm
          BldgNb: BldgNb
          BldgNm: BldgNm
          Flr: Flr
          PstBx: PstBx
          Room: Room
          PstCd: PstCd
          TwnNm: TwnNm
          TwnLctnNm: TwnLctnNm
          DstrctNm: DstrctNm
          CtrySubDvsn: CtrySubDvsn
          Ctry: Ctry
          AdrLine: AdrLine
        Id:
          OrgId:
            Othr:
              Id: 123
              SchmeNm:
                Prtry: DfspId
        CtryOfRes: BE
        CtctDtls:
          NmPrfx: Mr
          Nm: John Doe
          PhneNb: +123-123-321
          MobNb: +123-123-321
          FaxNb: +123-123-321
          EmailAdr: example@example.com
    PersonIdentification13:
      title: PersonIdentification13
      description: |
        Unique and unambiguous way to identify a person.
      type: object
      properties:
        DtAndPlcOfBirth:
          allOf:
            - $ref: "#/components/schemas/DateAndPlaceOfBirth1"
            - description: |
                DateAndPlaceOfBirth
                Date and place of birth of a person.
        Othr:
          allOf:
            - $ref: "#/components/schemas/GenericPersonIdentification1"
            - description: >
                Other

                Unique identification of a person, as assigned by an
                institution, using an identification scheme.
      example:
        DtAndPlcOfBirth:
          Dt: "2018-01-01"
          CityOfBirth: City
        Othr:
          Id: 123
          SchmeNm:
            Cd: CUST
            Prtry: 1
    PersonIdentificationSchemeName1Choice:
      title: PersonIdentificationSchemeName1Choice
      description: |
        Sets of elements to identify a name of the identification scheme.
      type: object
      anyOf:
        - properties:
            Cd:
              allOf:
                - $ref: "#/components/schemas/ExternalPersonIdentification1Code"
                - description: >
                    Code

                    Name of the identification scheme, in a coded form as
                    published in an external list.
          required:
            - Cd
        - properties:
            Prtry:
              allOf:
                - $ref: "#/components/schemas/Max35Text"
                - description: |
                    Proprietary
                    Name of the identification scheme, in a free text form.
          required:
            - Prtry
      example:
        Cd: CCPT
    PhoneNumber:
      title: PhoneNumber
      type: string
      description: |
        Double check this regex.
      pattern: ^\+[0-9]{1,3}-[0-9()+\-]{1,30}$
    PostalAddress24:
      title: PostalAddress24
      type: object
      description: >
        Information that locates and identifies a specific address, as defined
        by postal services.
      properties:
        AdrTp:
          $ref: "#/components/schemas/AddressType3Choice"
        Dept:
          $ref: "#/components/schemas/Max70Text"
        SubDept:
          $ref: "#/components/schemas/Max70Text"
        StrtNm:
          $ref: "#/components/schemas/Max70Text"
        BldgNb:
          $ref: "#/components/schemas/Max16Text"
        BldgNm:
          $ref: "#/components/schemas/Max35Text"
        Flr:
          $ref: "#/components/schemas/Max70Text"
        PstBx:
          $ref: "#/components/schemas/Max16Text"
        Room:
          $ref: "#/components/schemas/Max70Text"
        PstCd:
          $ref: "#/components/schemas/Max16Text"
        TwnNm:
          $ref: "#/components/schemas/Max35Text"
        TwnLctnNm:
          $ref: "#/components/schemas/Max35Text"
        DstrctNm:
          $ref: "#/components/schemas/Max35Text"
        CtrySubDvsn:
          $ref: "#/components/schemas/Max35Text"
        Ctry:
          $ref: "#/components/schemas/CountryCode"
        AdrLine:
          $ref: "#/components/schemas/Max70Text"
      example:
        AdrTp: ADDR
        Dept: Dept
        SubDept: SubDept
        StrtNm: StrtNm
        BldgNb: BldgNb
        BldgNm: BldgNm
        Flr: Flr
        PstBx: PstBx
        Room: Room
        PstCd: PstCd
        TwnNm: TwnNm
        TwnLctnNm: TwnLctnNm
        DstrctNm: DstrctNm
        CtrySubDvsn: CtrySubDvsn
        Ctry: Ctry
        AdrLine: AdrLine
    PreferredContactMethod1Code:
      title: PreferredContactMethod1Code
      description: >
        Preferred method used to reach the individual contact within an
        organisation.


        LETT: Letter

        MAIL: Email

        PHON: Phone

        FAXX: Fax

        CELL: Mobile phone
      type: string
      enum:
        - LETT
        - MAIL
        - PHON
        - FAXX
        - CELL
      example: CELL
    ProxyAccountIdentification1:
      title: ProxyAccountIdentification1
      description: |
        Information related to a proxy identification of the account.
      type: object
      properties:
        Tp:
          allOf:
            - $ref: "#/components/schemas/ProxyAccountType1Choice"
            - description: |
                Type
                Type of the proxy identification.
        Id:
          allOf:
            - $ref: "#/components/schemas/Max2048Text"
            - description: >
                Identification

                Identification used to indicate the account identification under
                another specified name.
      required:
        - Id
      example:
        Tp:
          Cd: IBAN
        Id: 123
    ProxyAccountType1Choice:
      title: ProxyAccountType1Choice
      description: |
        Specifies the type of the proxy account.
      type: object
      anyOf:
        - properties:
            Cd:
              allOf:
                - $ref: "#/components/schemas/ExternalProxyAccountType1Code"
                - description: >
                    Code

                    Proxy account type, in a coded form as published in an
                    external list.
          required:
            - Cd
        - properties:
            Prtry:
              allOf:
                - $ref: "#/components/schemas/Max35Text"
                - description: |
                    Proprietary
                    Proxy account type, in a proprietary form.
          required:
            - Prtry
      example:
        Cd: EMAIL
    SupplementaryData1:
      title: SupplementaryData1
      description: >
        Additional information that cannot be captured in the structured fields
        and/or any other specific block.
      type: object
      properties:
        PlcAndNm:
          allOf:
            - $ref: "#/components/schemas/Max350Text"
            - description: >
                PlaceAndName

                Unambiguous reference to the location where the supplementary
                data must be inserted in the message instance.
        Envlp:
          allOf:
            - $ref: "#/components/schemas/SupplementaryDataEnvelope1"
            - description: >
                Envelope

                Technical element wrapping the supplementary data.

                Technical component that contains the validated supplementary
                data information. This technical envelope allows to segregate
                the supplementary data information from any other information.
      required:
        - Envlp
      example:
        PlcAndNm: Additional information
        Envlp:
          Cd: CH03
          Prtry: Additional information
    SupplementaryDataEnvelope1:
      title: SupplementaryDataEnvelope1
      description: >
        SupplementaryDataEnvelope1

        Technical component that contains the validated supplementary data
        information. This technical envelope allows to segregate the
        supplementary data information from any other information.
      type: object
    VerificationReason1Choice:
      title: VerificationReason1Choice
      type: object
      description: |
        Choice of format for the verification reason.
        Only one, between the coded and the proprietary, can be chosen.
      anyOf:
        - properties:
            Cd:
              allOf:
                - $ref: "#/components/schemas/ExternalVerificationReason1Code"
                - description: >
                    Code

                    Reason why the verified identification information is
                    incorrect, as published in an external reason code list.
          required:
            - Cd
        - properties:
            Prtry:
              allOf:
                - $ref: "#/components/schemas/Max35Text"
                - description: >
                    Proprietary

                    Reason why the verified identification information is
                    incorrect, in a free text form.
          required:
            - Prtry
      example:
        Cd: AGNT
    VerificationReport4:
      title: VerificationReport4
      type: object
      description: >-
        VerificationReport

        Provides information about the verification of party and/or account
        identification information.
      properties:
        OrgnlId:
          allOf:
            - $ref: "#/components/schemas/Max35Text"
            - description: >
                OriginalIdentification

                Unique identification, as assigned by a sending party, to
                unambiguously identify the party and account identification
                information group within the original message.
        Vrfctn:
          allOf:
            - $ref: "#/components/schemas/IdentificationVerificationIndicator"
            - description: >
                Verification

                Identifies whether the party and/or account information received
                is correct. Boolean value.
        Rsn:
          allOf:
            - $ref: "#/components/schemas/VerificationReason1Choice"
            - description: >
                Reason

                Specifies the reason why the verified identification information
                is incorrect.
        OrgnlPtyAndAcctId:
          allOf:
            - $ref: "#/components/schemas/IdentificationInformation4"
            - description: >
                OriginalPartyAndAccountIdentification

                Provides party and/or account identification information as
                given in the original message.
        UpdtdPtyAndAcctId:
          allOf:
            - $ref: "#/components/schemas/IdentificationInformation4"
            - description: |
                UpdatedPartyAndAccountIdentification
                Provides party and/or account identification information.
      required:
        - OrgnlId
        - Vrfctn
      example:
        OrgnlId: 1.2345678901234568e+33
        Vrfctn: true
        OrgnlPtyAndAcctId:
          Nm: John Doe
          PstlAdr:
            AdrTp: ADDR
            Dept: Dept
            SubDept: SubDept
            StrtNm: 1234 Elm St
            BldgNb: 1234
            PstCd: 12345
            TwnNm: Anytown
            CtrySubDvsn: CA
            Ctry: US
          Id:
            OrgId:
              AnyBIC: ABCDUS33
              Othr:
                Id: 123456789
                Issr: ABA
        UpdtdPtyAndAcctId:
          Nm: John Doe
          PstlAdr:
            AdrTp: ADDR
            Dept: Dept
            SubDept: SubDept
            StrtNm: 1234 Elm St
            BldgNb: 1234
            PstCd: 12345
            TwnNm: Anytown
            CtrySubDvsn: CA
            Ctry: US
          Id:
            OrgId:
              AnyBIC: ABCDUS33
              Othr:
                Id: 123456789
                Issr: ABA
